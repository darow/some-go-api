<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a8cd0ca0-599e-422d-aff8-72cf8fc29dbc" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/internal/app/model/session.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/app/store/sqlstore/sessionrepository.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/app/store/sqlstore/sessionrepository_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/app/store/teststore/sessionrepository.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/readme.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/model/testing.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/model/testing.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/model/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/model/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/store/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/store/repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/store/sqlstore/store.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/store/sqlstore/store.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/store/sqlstore/store_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/store/sqlstore/store_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/store/sqlstore/userrepository.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/store/sqlstore/userrepository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/store/sqlstore/userrepository_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/store/sqlstore/userrepository_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/store/store.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/store/store.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/store/teststore/store.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/store/teststore/store.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/store/teststore/userrepository.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/store/teststore/userrepository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/store/teststore/userrepository_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/store/teststore/userrepository_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/migrations/20220329105241_create_users.down.sql" beforeDir="false" afterPath="$PROJECT_DIR$/migrations/20220329105241_create_users.down.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/migrations/20220329105241_create_users.up.sql" beforeDir="false" afterPath="$PROJECT_DIR$/migrations/20220329105241_create_users.up.sql" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../../../../Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/internal/app/store/sqlstore/testing.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/internal/app/store/sqlstore/userrepository_test.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/internal/app/store/sqlstore/userrepository.go" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProjectId" id="27ELW61SIr2weD6uO2RIPpE4SjL" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../encryptTest" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\a\Desktop\Программирование\go\playground\some-go-api\internal\app\store\sqlstore" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestUserRepository_FindByLoginPass in some-go-api/internal/app/store/sqlstore">
    <configuration name="TestSessionRepository_FindByToken in some-go-api/internal/app/store/sqlstore (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="some-go-api" />
      <working_directory value="$PROJECT_DIR$/internal/app/store/sqlstore" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="some-go-api/internal/app/store/sqlstore" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSessionRepository_FindByToken\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUserRepository_Create in some-go-api/internal/app/store/sqlstore" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="some-go-api" />
      <working_directory value="$PROJECT_DIR$/internal/app/store/sqlstore" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="some-go-api/internal/app/store/sqlstore" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUserRepository_Create\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUserRepository_Find in some-go-api/internal/app/store/sqlstore" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="some-go-api" />
      <working_directory value="$PROJECT_DIR$/internal/app/store/sqlstore" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="some-go-api/internal/app/store/sqlstore" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUserRepository_Find\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUserRepository_FindByLogin in some-go-api/internal/app/store/sqlstore" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="some-go-api" />
      <working_directory value="$PROJECT_DIR$/internal/app/store/sqlstore" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="some-go-api/internal/app/store/sqlstore" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUserRepository_FindByLogin\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUserRepository_FindByLoginPass in some-go-api/internal/app/store/sqlstore" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="some-go-api" />
      <working_directory value="$PROJECT_DIR$/internal/app/store/sqlstore" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="some-go-api/internal/app/store/sqlstore" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUserRepository_FindByLoginPass\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestUserRepository_FindByLoginPass in some-go-api/internal/app/store/sqlstore" />
        <item itemvalue="Go Test.TestUserRepository_FindByLogin in some-go-api/internal/app/store/sqlstore" />
        <item itemvalue="Go Test.TestUserRepository_Find in some-go-api/internal/app/store/sqlstore" />
        <item itemvalue="Go Test.TestUserRepository_Create in some-go-api/internal/app/store/sqlstore" />
        <item itemvalue="Go Test.TestSessionRepository_FindByToken in some-go-api/internal/app/store/sqlstore (1)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>